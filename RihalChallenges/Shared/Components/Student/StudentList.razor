<MudTable Items="@Students" FixedHeader="true" FixedFooter="true" Height="calc(100vh - 200px)">
    <HeaderContent>
        <MudTh>Student FullName</MudTh>
        <MudTh>Country</MudTh>
        <MudTh>Class</MudTh>
        <MudTh>BirthDate</MudTh>
        <MudTh>Create Date</MudTh>
        <MudTh>Modified Date</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Student FullName">@context.Name</MudTd>
        <MudTd DataLabel="Country">@context.Country.Name</MudTd>
        <MudTd DataLabel="Class">@context.Class.Name</MudTd>
        <MudTd DataLabel="BirthDate">@context.BirthDate.Value.ToShortDateString()</MudTd>
        <MudTd DataLabel="Created">@context.CreateDate</MudTd>
        <MudTd DataLabel="Modified">@context.ModifiedDate</MudTd>
        <MudTd>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto"
                        @onclick="() => UpdateClicked(context.Id)">
                Update
            </MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Error" Class="ml-auto"
                        @onclick="() => DeleteClicked(context.Id)">
                Delete
            </MudButton>
        </MudTd>
    </RowTemplate>
    <FooterContent>
    </FooterContent>
</MudTable>

@code
{

    [Parameter]
    public EventCallback<int> OnDeleteClicked { get; set; }

    [Parameter]
    public EventCallback<int> OnUpdateClicked { get; set; }

    public void DeleteClicked(int studentId)
    {
        OnDeleteClicked.InvokeAsync(studentId);
    }

    public void UpdateClicked(int studentId)
    {
        OnUpdateClicked.InvokeAsync(studentId);
    }

    [Parameter]
    public List<Common.Models.StudentDTO> Students { get; set; }

}